Blurb::
Polynomial surrogate model
Description::
Linear, quadratic, and cubic polynomial surrogate models are available
in Dakota.  The utility of the simple polynomial models stems from two
sources:

- over a small portion of the parameter space, a low-order   polynomial model is often an accurate approximation to the true data   trends
- the least-squares procedure provides a surface fit that smooths out   noise in the data.

Local surrogate-based optimization methods (
:dakkw:`method-surrogate_based_local`) are often successful when using
polynomial models, particularly quadratic models. However, a
polynomial surface fit may not be the best choice for modeling data
trends globally over the entire parameter space, unless it is known a
priori that the true data trends are close to linear, quadratic, or
cubic. See :cite:p:`Mye95` for more information on polynomial models.

*Known Issue: When using discrete variables, there have been
sometimes significant differences in surrogate behavior observed
across computing platforms in some cases.  The cause has not yet been
fully diagnosed and is currently under investigation.  In addition,
guidance on appropriate construction and use of surrogates with
discrete variables is under development.  In the meantime, users
should therefore be aware that there is a risk of inaccurate results
when using surrogates with discrete variables.*
Topics::

Examples::

Theory::
The form of the linear polynomial model is

.. math::  \hat{f}(\mathbf{x}) \approx c_{0}+\sum_{i=1}^{n}c_{i}x_{i} 

the form of the quadratic polynomial model is:


.. math::  \hat{f}(\mathbf{x}) \approx c_{0}+\sum_{i=1}^{n}c_{i}x_{i}
 +\sum_{i=1}^{n}\sum_{j \ge i}^{n}c_{ij}x_{i}x_{j} 

and the form of the cubic polynomial model is:


.. math::  \hat{f}(\mathbf{x}) \approx c_{0}+\sum_{i=1}^{n}c_{i}x_{i}
 +\sum_{i=1}^{n}\sum_{j \ge i}^{n}c_{ij}x_{i}x_{j}
 +\sum_{i=1}^{n}\sum_{j \ge i}^{n}\sum_{k \ge j}^{n}
 c_{ijk}x_{i}x_{j}x_{k} 

In all of the polynomial models, :math:`\hat{f}(\mathbf{x})`  is the response
of the polynomial model; the :math:`x_{i},x_{j},x_{k}`  terms are the
components of the :math:`n` -dimensional design parameter values; the :math:`c_{0}` 
, :math:`c_{i}`  , :math:`c_{ij}`  , :math:`c_{ijk}`  terms are the polynomial
coefficients, and :math:`n`  is the number of design parameters. The number
of coefficients, :math:`n_{c}` , depends on the order of polynomial model and
the number of design parameters. For the linear polynomial:


.. math::  n_{c_{linear}}=n+1 

for the quadratic polynomial:


.. math::  n_{c_{quad}}=\frac{(n+1)(n+2)}{2} 

and for the cubic polynomial:


.. math::  n_{c_{cubic}}=\frac{(n^{3}+6 n^{2}+11 n+6)}{6} 

There must be at least :math:`n_{c}`  data samples in order to form a fully
determined linear system and solve for the polynomial coefficients. In
Dakota, a least-squares approach involving a singular value
decomposition numerical method is applied to solve the linear system.
Faq::

See_Also::
